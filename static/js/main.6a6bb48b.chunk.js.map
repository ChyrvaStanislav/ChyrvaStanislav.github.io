{"version":3,"sources":["components/StarContainer/StarContainer.module.scss","components/StarContainer/StarContainer.jsx","components/Grid/Grid.jsx","components/StarsRoot/StarsRoot.jsx","App.js","reportWebVitals.js","index.js","components/Grid/Grid.module.scss","components/StarsRoot/StarsRoot.module.scss"],"names":["module","exports","StarContainer","props","name","group","x","y","id","isHovered","setHoverGroup","transformParam","ref","useRef","handleMouseEnter","handleMouseLeave","handleClick","e","current","getBoundingClientRect","clientX","clientY","height","width","setTransform","useMemo","className","styles","root","style","gridArea","wrapper","classNames","star","hovered","onMouseEnter","onMouseLeave","onClick","defaultProps","stars","Grid","useState","hoverGroup","array","Array","rows","fill","gridBackground","gridTemplateColumns","gridTemplateRows","map","item","index","grid","GridItem","StarsRoot","defaultScale","defaultPositionX","defaultPositionY","wheel","step","scalePadding","disabled","animationTime","animationType","pan","tools","zoomIn","zoomOut","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a6bb48b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"StarContainer_root__3DVb9\",\"wrapper\":\"StarContainer_wrapper__3NTl_\",\"star\":\"StarContainer_star__3SgMA\",\"hovered\":\"StarContainer_hovered__n653M\"};","import React, { useMemo, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from \"classnames\";\r\nimport styles from './StarContainer.module.scss';\r\n\r\n\r\nconst StarContainer = (props) => {\r\n    const { name, group, x, y, id, isHovered, setHoverGroup, transformParam } = props;\r\n    const ref = useRef();\r\n\r\n    const handleMouseEnter = () => {\r\n        setHoverGroup(group);\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setHoverGroup(null);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        const { x: clientX, y: clientY, height, width } = ref.current.getBoundingClientRect();\r\n        transformParam.setTransform(-clientX - width, -clientY - height, 2, 100, 'linear');\r\n    }\r\n\r\n    return useMemo( () => (\r\n        <div className={styles.root} style={{ gridArea: `${x} / ${y}` }}>\r\n            <div className={styles.wrapper} ref={ref} id={`id${id}`}>\r\n                <button className={classNames(styles.star, {[styles.hovered]: isHovered})} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onClick={handleClick}/>\r\n                <span key={name}>{name}</span>\r\n                <span key={group}>{group}</span>\r\n            </div>\r\n        </div>\r\n    ), [isHovered]);\r\n};\r\n\r\nStarContainer.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    group: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired,\r\n    isHovered: PropTypes.bool.isRequired,\r\n    setHoverGroup: PropTypes.func.isRequired,\r\n    transformParam: PropTypes.object.isRequired,\r\n};\r\n\r\nStarContainer.defaultProps = {};\r\n\r\nexport default StarContainer;\r\n","import React, {useState, useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Grid.module.scss';\r\nimport StarContainer from \"../StarContainer\";\r\n\r\nconst stars = [\r\n    {\r\n        id: '001',\r\n        x: 10,\r\n        y: 10,\r\n        group: 'AAAAAA',\r\n        name: 'Argo'\r\n    },{\r\n        id: '002',\r\n        x: 6,\r\n        y: 8,\r\n        group: 'BBBBBB',\r\n        name: 'Virto'\r\n    },{\r\n        id: '003',\r\n        x: 5,\r\n        y: 5,\r\n        group: 'AAAAAA',\r\n        name: 'Arma'\r\n    },{\r\n        id: '004',\r\n        x: 15,\r\n        y: 19,\r\n        group: 'BBBBBB',\r\n        name: 'Compa'\r\n    },\r\n    {\r\n        id: '005',\r\n        x: 10,\r\n        y: 2,\r\n        group: 'AAAAAA',\r\n        name: 'Argo'\r\n    },{\r\n        id: '006',\r\n        x: 14,\r\n        y: 6,\r\n        group: 'AAAAAA',\r\n        name: 'Virto'\r\n    },{\r\n        id: '007',\r\n        x: 22,\r\n        y: 4,\r\n        group: 'BBBBBB',\r\n        name: 'Arma'\r\n    },{\r\n        id: '008',\r\n        x: 13,\r\n        y: 13,\r\n        group: 'BBBBBB',\r\n        name: 'Compa'\r\n    },{\r\n        id: '009',\r\n        x: 10,\r\n        y: 22,\r\n        group: 'AAAAAA',\r\n        name: 'Argo'\r\n    },{\r\n        id: '10',\r\n        x: 27,\r\n        y: 18,\r\n        group: 'CCCCCC',\r\n        name: 'Virto'\r\n    },{\r\n        id: '011',\r\n        x: 22,\r\n        y: 23,\r\n        group: 'CCCCCC',\r\n        name: 'Arma'\r\n    },{\r\n        id: '012',\r\n        x: 26,\r\n        y: 21,\r\n        group: 'CCCCCC',\r\n        name: 'Compa'\r\n    },\r\n]\r\nconst Grid = (props) => {\r\n    const { transformParam } = props;\r\n    const [hoverGroup, setHoverGroup] = useState(null);\r\n    const rows = 30;\r\n    const columns = 30;\r\n    const array = new Array(rows * columns).fill(null);\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n        <div className={styles.gridBackground} style={{ gridTemplateColumns: `repeat(${columns}, 1fr`, gridTemplateRows: `repeat(${rows}, 1fr` }}>{array.map((item, index) => <GridItem key={`grid-item-${index}`} index={index} />)}</div>\r\n    <div className={styles.grid} style={{ gridTemplateColumns: `repeat(${columns}, 1fr`, gridTemplateRows: `repeat(${rows}, 1fr` }}>\r\n            {stars.map(({ name, group, id, x, y  }) => <StarContainer\r\n                key={`${group}-${name}-${id}`}\r\n                name={name} group={group}\r\n                id={id}\r\n                x={x}\r\n                y={y}\r\n                isHovered={hoverGroup === group}\r\n                setHoverGroup={setHoverGroup}\r\n                transformParam={transformParam}\r\n            />)}\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nGrid.propTypes = {\r\n    transformParam: PropTypes.object.isRequired,\r\n};\r\n\r\nGrid.defaultProps = {};\r\n\r\nexport default Grid;\r\n\r\n\r\nconst GridItem = ({ index }) => useMemo(() => (\r\n    <span key={`grid-item-${index}`} />\r\n), [])\r\n","import React from 'react';\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport styles from './StarsRoot.module.scss';\r\nimport Grid from \"../Grid\";\r\nimport {logDOM} from \"@testing-library/react\";\r\n\r\nconst StarsRoot = (props) => {\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <TransformWrapper\r\n                defaultScale={1}\r\n                defaultPositionX={100}\r\n                defaultPositionY={200}\r\n                wheel={{\r\n                    step: 200,\r\n                }}\r\n                scalePadding={{\r\n                    disabled: true,\r\n                    animationTime: 50,\r\n                    animationType: 'linear',\r\n                }}\r\n                pan={{\r\n                    animationTime: 50,\r\n                }}\r\n                // onPanning={(e) => console.log('on panning: ', e)}\r\n            >\r\n                {(transformParam) => (\r\n                    <>\r\n                        <div className={styles.tools}>\r\n                            <button onClick={transformParam.zoomIn}>+</button>\r\n                            <button onClick={transformParam.zoomOut}>-</button>\r\n                        </div>\r\n                        <TransformComponent>\r\n                               <Grid transformParam={transformParam} />\r\n                        </TransformComponent>\r\n                    </>\r\n                )}\r\n            </TransformWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nStarsRoot.propTypes = {};\r\n\r\nStarsRoot.defaultProps = {};\r\n\r\nexport default StarsRoot;\r\n","import './App.css';\nimport StarsRoot from \"./components/StarsRoot\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StarsRoot />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Grid_root__1aiWb\",\"grid\":\"Grid_grid__1DGTV\",\"gridBackground\":\"Grid_gridBackground__3XJd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"StarsRoot_root__3PqO6\",\"tools\":\"StarsRoot_tools__12B1w\"};"],"sourceRoot":""}